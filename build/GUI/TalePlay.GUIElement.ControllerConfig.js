(function(t,e,i,s){var n=i("shortcut")({rs:"rescope",mapping:"Controller.Mapping"}),o={Keyboard:1,Gamepad:2},a=i("GUIElement"),r=function(t){var e="";switch(t){case 32:case" ":e="space";break;case 16:e="shift";break;case 19:e="pause";break;case 13:e="enter";break;case 37:e="left";break;case 38:e="up";break;case 39:e="right";break;case 40:e="down";break;case 96:e="num 0";break;case 97:e="num 1";break;case 98:e="num 2";break;case 99:e="num 3";break;case 100:e="num 4";break;case 101:e="num 5";break;case 102:e="num 6";break;case 103:e="num 7";break;case 104:e="num 8";break;case 105:e="num 9";break;default:e="string"==typeof t?t:String.fromCharCode(t)}return e},h=function(t,e,i){var s="";i&&(s+='<input type="text" data-field="name"',"string"==typeof i&&(s+=' value="'+i+'"'),s+=">"),s+='<div class="buttons">';for(var n=0;t>n;n++)s+='<span class="button"><span>'+n+"</span>"+'<input type="text" size="3" data-button="'+n+'">'+"</span>";s+='</div><div class="analogSticks">';for(var n=0;2*e>n;n+=2)s+='<span class="analogStick"><span>'+n/2+"</span>"+'<label class="axisButton" for="axisButton'+n/2+'"> buttons </label><input class="axisButton" type="checkbox" id="axisButton'+n/2+'">'+"<span>"+'<input type="text" size="3" class="axis-y pos" data-axis="'+(n+1)+'">'+'<input type="text" size="3" class="axis-x pos" data-axis="'+n+'">'+'<input type="text" size="3" class="axis-y neg" data-axis="-'+(n+1)+'">'+'<input type="text" size="3" class="axis-x neg" data-axis="-'+n+'">'+"</span>"+"</span>";return s+='</div><button data-value="ok">OK</button><button data-value="cancel">Cancel</button>'},l=a.ControllerConfig=t.Class(a,{init:function(t){t=t||{},this.superInit(a,t),n.rs.all(["onInputChange","onClick"],this),this.createListener("submit"),this.addStyleClass("ControllerConfig"),this.domElement.addEventListener("keydown",this.onInputChange,!0),this.domElement.addEventListener("click",this.onClick,!0),this.domElement.innerHTML=h(t.buttons,t.analogSticks,t.name),this.controllerType=0,this.controller=null,this.setController(t.controller)},setController:function(t){if(this.controller!==t&&(this.controller&&(this.controller.setMapping(this.oldMapping),this.controller.removeListener("analogStickChanged buttonChanged",this,this.controllerChanged),this.controllerType=0,this.domElement.classList.remove("Keyboard"),this.domElement.classList.remove("Gamepad"),this.controller=null),this.controller=t||null),this.controller&&(s("Controller.Keyboard")&&this.controller instanceof i("Controller.Keyboard")?(this.controllerType=o.Keyboard,this.domElement.classList.add("Keyboard")):(this.controllerType=o.Gamepad,this.domElement.classList.add("Gamepad"),this.controller.addListener("analogStickChanged buttonChanged",this,"controllerChanged")),this.oldMapping=this.controller.getMapping(),this.controller.setMapping(null),this.oldMapping)){for(var e=this.oldMapping.getReverseMapping(),n=this.getButtons(),a=0;n.length>a;a++){var h=n[a];h.value=e.buttons[h.dataset.button],t===o.Keyboard&&(h.title=r(e.buttons[h.dataset.button]))}for(var l=this.getAxes(),a=0;l.length>a;a++){var d=l[a];d.value=e.axes[d.dataset.axis],t===o.Keyboard&&(d.title=r(e.axes[d.dataset.axis]))}for(var c=this.getAxisButtons(),a=0;c.length>a;a++){var u=c[a];u.value=e.buttonAxis[u.dataset.axis],t===o.Keyboard&&(u.title=r(e.buttonAxis[u.dataset.axis]))}}},getButtons:function(){return this.domElement.querySelectorAll("input[data-button]")},getAxisButtons:function(){return this.controllerType===o.Keyboard?this.domElement.querySelectorAll(".analogStick [data-axis]"):this.domElement.querySelectorAll(".axisButton:checked+* > input")},getAxes:function(){return this.controllerType!==o.Keyboard?this.domElement.querySelectorAll(".axisButton:not(:checked)+* > .pos"):[]},onInputChange:function(t){if("INPUT"===t.target.tagName&&"name"!==t.target.dataset.field&&"Backspace"!==t.key&&this.controllerType===o.Keyboard){t.preventDefault(),t.stopPropagation();var e=t.target;e.value=t.code||t.key,e.title=r(t.code||t.key)}},onClick:function(t){"BUTTON"===t.target.tagName&&this.fire("submit",{value:t.target.dataset.value})},controllerChanged:function(t){if("buttonChanged"!==t.type||void 0===document.activeElement.dataset.button&&(void 0===document.activeElement.dataset.axis||document.activeElement.parentNode.previousSibling.checked!==!0&&this.controllerType!==o.Keyboard)){if("analogStickChanged"===t.type&&void 0!==document.activeElement.dataset.axis&&document.activeElement.parentNode.previousSibling.checked===!1){var e=Math.abs(t.analogStick.x),i=Math.abs(t.analogStick.y);if(e>.5||i>.5)if(e>i){var s="";0>t.analogStick.x&&(s="-"),document.activeElement.value=s+2*t.index}else{var s="";0>t.analogStick.y&&(s="-"),document.activeElement.value=s+(2*t.index+1)}}}else document.activeElement.value=t.index},getData:function(){for(var t={buttons:{},buttonAxis:{},axes:{}},e=this.getButtons(),i=0;e.length>i;i++){var s=e[i];t.buttons[s.value]=s.dataset.button}for(var n=this.getAxisButtons(),i=0;n.length>i;i++)t.buttonAxis[n[i].value]=n[i].dataset.axis;for(var o=this.getAxes(),i=0;o.length>i;i++){var a=o[i],r=a.value,h=a.dataset.axis;0>1/r&&(r=-r,h="-"+h),t.axes[r]=h}return t},getMapping:function(){var t="";switch(this.controllerType){case o.Keyboard:t="KEYBOARD";break;case o.Gamepad:t="GAMEPAD"}var e=this.domElement.querySelector('[data-field="name"]');return e&&(e=e.value),new n.mapping({data:this.getData(),type:t,name:e})},destroy:function(){this.setController(null),a.prototype.destroy.call(this)}});e("GUI.ControllerConfig",l)})(Morgas,Morgas.setModule,Morgas.getModule,Morgas.hasModule);